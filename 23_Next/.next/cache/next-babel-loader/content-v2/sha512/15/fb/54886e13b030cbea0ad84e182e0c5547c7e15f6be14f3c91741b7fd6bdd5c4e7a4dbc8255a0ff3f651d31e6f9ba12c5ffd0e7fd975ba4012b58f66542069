{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\nxf55111\\\\Desktop\\\\Coding\\\\Udemy--react-complete-guide-reworked\\\\23_Next\\\\pages\\\\index.js\";\nimport React from 'react';\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: \"A first meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 5, 12345 Some City\",\n  description: \"This is a first meetup!\"\n}, {\n  id: 'm2',\n  title: \"A second meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 4, 12345 Some City\",\n  description: \"This is a second meetup!\"\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}; // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   // runs on the server, not on the client\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\n\n\nexport async function getStaticProps() {\n  // The code written here will be server side, it will never executed on the client side.\n  const client = await MongoClient.connect('mongodb+srv://honza:8FLv2ItL6TQGi481@cluster0.iewhe.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n  console.log('awaited client');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    // incremental static generation\n    revalidate: 10\n  };\n}\n;\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/nxf55111/Desktop/Coding/Udemy--react-complete-guide-reworked/23_Next/pages/index.js"],"names":["React","MeetupList","MongoClient","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","console","log","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EAAE,gFAHT;AAIEC,EAAAA,OAAO,EAAE,iCAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CADoB,EAQpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EAAE,gFAHT;AAIEC,EAAAA,OAAO,EAAE,iCAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CARoB,CAAtB;;AAiBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,6GAApB,CAArB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,QAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMR,OAAO,GAAG,MAAMO,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACY,GAAR,CAAYC,MAAM,KAAK;AAC9BnB,QAAAA,KAAK,EAAEmB,MAAM,CAACnB,KADgB;AAE9BE,QAAAA,OAAO,EAAEiB,MAAM,CAACjB,OAFc;AAG9BD,QAAAA,KAAK,EAAEkB,MAAM,CAAClB,KAHgB;AAI9BF,QAAAA,EAAE,EAAEoB,MAAM,CAACC,GAAP,CAAWC,QAAX;AAJ0B,OAAL,CAAlB;AADJ,KADF;AASL;AACAC,IAAAA,UAAU,EAAE;AAVP,GAAP;AAYD;AAAA;AAED,eAAelB,QAAf","sourcesContent":["import React from 'react';\r\nimport MeetupList from '../components/meetups/MeetupList';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: 'm1',\r\n    title: \"A first meetup\",\r\n    image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\r\n    address: \"Some address 5, 12345 Some City\",\r\n    description: \"This is a first meetup!\"\r\n  },\r\n  {\r\n    id: 'm2',\r\n    title: \"A second meetup\",\r\n    image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\r\n    address: \"Some address 4, 12345 Some City\",\r\n    description: \"This is a second meetup!\"\r\n  }\r\n];\r\n\r\nconst HomePage = (props) => {\r\n  return (\r\n    <MeetupList meetups={props.meetups} />\r\n  );\r\n};\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n//   // fetch data from an API\r\n//   // runs on the server, not on the client\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport async function getStaticProps() {\r\n  // The code written here will be server side, it will never executed on the client side.\r\n  const client = await MongoClient.connect('mongodb+srv://honza:8FLv2ItL6TQGi481@cluster0.iewhe.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\r\n\r\n  console.log('awaited client');\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map(meetup => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString()\r\n      }))\r\n    },\r\n    // incremental static generation\r\n    revalidate: 10\r\n  };\r\n};\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}